{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dilanka Nirmal\\\\Downloads\\\\Y3S1\\\\SPM\\\\Assignment\\\\Origin_FlickPlix\\\\New\\\\FlickPlix\\\\Frontend\\\\src\\\\components\\\\mainpages\\\\trailers\\\\Trailers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { GlobalState } from '../../../GlobalState';\nimport TrailerAdvertisement from '../utils/trailerAdvertisement/TrailerAdvertisement';\nimport Loading from '../utils/loading/Loading';\nimport axios from 'axios';\nimport Filters from './Filters';\nimport LoadMore from './LoadMore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Trailers() {\n  _s();\n\n  const state = useContext(GlobalState);\n  const [trailers, setTrailers] = state.trailersAPI.trailers;\n  const [isArtist] = state.userAPI.isArtist;\n  const [token] = state.token;\n  const [callback, setCallback] = state.trailersAPI.callback;\n  const [loading, setLoading] = useState(false);\n  const [isCheck, setIsCheck] = useState(false);\n\n  const handleCheck = id => {\n    trailers.forEach(trailer => {\n      if (trailer._id === id) trailer.checked = !trailer.checked;\n    });\n    setTrailers([...trailers]);\n  };\n\n  const deleteTrailer = async (id, public_id) => {\n    console.log({\n      id,\n      public_id\n    });\n\n    try {\n      setLoading(true);\n      const destroyImg = axios.post('/api/destroy', {\n        public_id\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      const deleteTrailer = axios.delete(`/api/trailers/${id}`, {\n        headers: {\n          Authorization: token\n        }\n      });\n      await destroyImg;\n      await deleteTrailer;\n      setCallback(!callback);\n      setLoading(false);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const checkAll = () => {\n    trailers.forEach(trailer => {\n      trailer.checked = !isCheck;\n    });\n    setTrailers([...trailers]);\n    setIsCheck(!isCheck);\n  };\n\n  const deleteAll = () => {\n    trailers.forEach(trailer => {\n      if (trailer.checked) deleteTrailer(trailer._id, trailer.images.public_id);\n    });\n  };\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Filters, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 10\n    }, this), isArtist && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"delete-all\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Select all\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: isCheck,\n        onChange: checkAll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteAll,\n        children: \"Delete All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trailers\",\n      children: trailers.map(trailer => {\n        return /*#__PURE__*/_jsxDEV(TrailerAdvertisement, {\n          trailer: trailer,\n          isArtist: isArtist,\n          deleteTrailer: deleteTrailer,\n          handleCheck: handleCheck\n        }, trailer._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LoadMore, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), trailers.length === 0 && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Trailers, \"axFmx3/IJQL9Ub6NoF3Yqs3Zihs=\");\n\n_c = Trailers;\nexport default Trailers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Trailers\");","map":{"version":3,"sources":["C:/Users/Dilanka Nirmal/Downloads/Y3S1/SPM/Assignment/Origin_FlickPlix/New/FlickPlix/Frontend/src/components/mainpages/trailers/Trailers.js"],"names":["React","useContext","useState","GlobalState","TrailerAdvertisement","Loading","axios","Filters","LoadMore","Trailers","state","trailers","setTrailers","trailersAPI","isArtist","userAPI","token","callback","setCallback","loading","setLoading","isCheck","setIsCheck","handleCheck","id","forEach","trailer","_id","checked","deleteTrailer","public_id","console","log","destroyImg","post","headers","Authorization","delete","err","alert","response","data","msg","checkAll","deleteAll","images","map","length"],"mappings":"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","sourcesContent":["import React, {useContext,useState} from 'react'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport TrailerAdvertisement from '../utils/trailerAdvertisement/TrailerAdvertisement'\r\nimport Loading from '../utils/loading/Loading'\r\nimport axios from 'axios'\r\nimport Filters from './Filters'\r\nimport LoadMore from './LoadMore'\r\n\r\n\r\nfunction Trailers() {\r\n\r\n    const state = useContext(GlobalState)\r\n    const [trailers, setTrailers] = state.trailersAPI.trailers\r\n   const [isArtist] =state.userAPI.isArtist\r\n    const [token] =state.token\r\n    const [callback, setCallback] =state.trailersAPI.callback\r\n    const [loading, setLoading] = useState(false)\r\n    const [isCheck, setIsCheck] = useState(false)\r\n\r\n\r\n    const handleCheck = (id) =>{\r\n      trailers.forEach(trailer => {\r\n          if(trailer._id === id) trailer.checked = !trailer.checked\r\n            })\r\n\r\n      setTrailers([...trailers])\r\n    }\r\n    const deleteTrailer = async(id, public_id) =>{\r\n        console.log({id, public_id})\r\n       try {\r\n            setLoading(true)\r\n            const destroyImg = axios.post('/api/destroy', {public_id},{\r\n                headers: {Authorization: token}\r\n            })\r\n            const deleteTrailer = axios.delete(`/api/trailers/${id}`, {\r\n                 headers: {Authorization: token}\r\n         })\r\n \r\n         await destroyImg\r\n         await deleteTrailer\r\n         \r\n         setCallback(!callback)\r\n         setLoading(false)\r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n\r\n     }\r\n const checkAll =() =>{\r\n     trailers.forEach(trailer =>{\r\n        trailer.checked = !isCheck\r\n\r\n     })\r\n     setTrailers([...trailers])\r\n     setIsCheck(!isCheck)\r\n }\r\n const deleteAll =() =>{\r\n    trailers.forEach(trailer =>{\r\n         if(trailer.checked) deleteTrailer(trailer._id, trailer.images.public_id)\r\n     })\r\n }\r\n    if(loading) return <div><Loading /></div>\r\n    return ( \r\n        <> \r\n         <Filters />\r\n        {\r\n            isArtist &&\r\n            <div className=\"delete-all\">\r\n                <span>Select all</span>\r\n                <input type=\"checkbox\" checked ={isCheck} onChange={checkAll} />\r\n                <button onClick ={deleteAll}>Delete All</button>\r\n             </div>\r\n        }\r\n        <div className=\"trailers\">\r\n            {\r\n                trailers.map(trailer =>{\r\n                    return <TrailerAdvertisement key={trailer._id} trailer={trailer} \r\n                    isArtist = {isArtist} deleteTrailer = {deleteTrailer} handleCheck={handleCheck}/>\r\n                })\r\n            }\r\n        </div>  \r\n        <LoadMore />\r\n        {trailers.length === 0 && <Loading />}\r\n    {/*  { <NotFound />*/}\r\n        \r\n        </> \r\n    )\r\n}\r\n\r\n\r\nexport default Trailers\r\n"]},"metadata":{},"sourceType":"module"}