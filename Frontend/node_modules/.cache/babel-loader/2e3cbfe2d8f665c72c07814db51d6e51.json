{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dilanka Nirmal\\\\Downloads\\\\Y3S1\\\\SPM\\\\Assignment\\\\Origin_FlickPlix\\\\FlickPlix\\\\Frontend\\\\src\\\\components\\\\customerPasswordReset\\\\customerPasswordReset.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { getUser } from '../../utils/common';\nimport '../../css/it19184722.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CustomerPasswordReset(props) {\n  _s();\n\n  const [password, setpassword] = useState(\"\");\n  const [repassword, setrepassword] = useState(\"\");\n  const id = getUser();\n  const [errors, seterrors] = useState([]);\n  const [emailerror, setemailerror] = useState(\"\");\n\n  const resetPassword = async e => {\n    e.preventDefault();\n    setemailerror('');\n    seterrors([]);\n    const response = await axios.post(`http://localhost:8070/customer/profile/reset-password/${id}`, {\n      password,\n      repassword\n    });\n\n    if (response.data.success) {\n      localStorage.setItem('success', 'Password reset is successfull!');\n      props.history.push(\"/customer/profile\");\n    }\n\n    if (response.data.errors) {\n      seterrors(response.data.errors);\n      setpassword(\"\");\n      setrepassword(\"\");\n    }\n\n    if (response.data.emailerror) {\n      setemailerror(response.data.emailerror);\n      setpassword(\"\");\n      setrepassword(\"\");\n    }\n  };\n\n  const cancelReset = () => {\n    window.location = \"/customer/profile\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"it19184722-PWResetForm\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-group it19184722-myForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), errors ? errors.map(error => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"alert alert-danger\",\n          role: \"alert\",\n          children: error.msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this);\n      }) : null, emailerror ? /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"alert alert-danger\",\n        role: \"alert\",\n        children: emailerror\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter New Password\",\n        className: \"form-control\",\n        type: \"password\",\n        value: password,\n        onChange: e => setpassword(e.target.value.trim())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 166\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Re-type Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter Password Again\",\n        className: \"form-control\",\n        type: \"password\",\n        value: repassword,\n        onChange: e => setrepassword(e.target.value.trim())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 172\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"it19184722-btn-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"resetPassword\",\n          type: \"button\",\n          value: \"Reset\",\n          onClick: resetPassword,\n          className: \"it19184722-green-btn btn\",\n          style: {\n            marginRight: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"cancelButton2\",\n          type: \"button\",\n          value: \"Cancel\",\n          onClick: cancelReset,\n          className: \"btn-danger it19184722-red-btn btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CustomerPasswordReset, \"LzwkwwbAIkF7LfWN/ZuWtCRabTE=\");\n\n_c = CustomerPasswordReset;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerPasswordReset\");","map":{"version":3,"sources":["C:/Users/Dilanka Nirmal/Downloads/Y3S1/SPM/Assignment/Origin_FlickPlix/FlickPlix/Frontend/src/components/customerPasswordReset/customerPasswordReset.js"],"names":["React","useState","axios","getUser","CustomerPasswordReset","props","password","setpassword","repassword","setrepassword","id","errors","seterrors","emailerror","setemailerror","resetPassword","e","preventDefault","response","post","data","success","localStorage","setItem","history","push","cancelReset","window","location","map","error","msg","target","value","trim","marginRight"],"mappings":"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","sourcesContent":["import React, {useState}  from 'react';\nimport axios from 'axios';\nimport {getUser} from '../../utils/common';\nimport '../../css/it19184722.css';\n\nexport default function CustomerPasswordReset(props) {\n    const [password, setpassword] = useState(\"\");\n    const [repassword, setrepassword] = useState(\"\");\n    const id = getUser();\n    const [errors, seterrors] = useState([]);\n    const [emailerror, setemailerror] = useState(\"\");   \n\n    const resetPassword = async(e) => {\n\n        e.preventDefault();\n        setemailerror('');\n        seterrors([]);\n\n        const response = await axios.post(`http://localhost:8070/customer/profile/reset-password/${id}`,{password,repassword});\n        if (response.data.success) {\n            localStorage.setItem('success', 'Password reset is successfull!');\n            props.history.push(\"/customer/profile\");\n        }\n        if (response.data.errors) {\n            seterrors(response.data.errors);\n            setpassword(\"\")\n            setrepassword(\"\")\n        }\n        if(response.data.emailerror){\n            setemailerror(response.data.emailerror);\n            setpassword(\"\")\n            setrepassword(\"\")\n        } \n    }\n    const cancelReset = () => {\n        window.location = \"/customer/profile\";\n    }\n\n    return (\n        <div id=\"it19184722-PWResetForm\">\n            <form className=\"form-group it19184722-myForm\">\n            <h2>Reset Password</h2>\n            {errors ? errors.map((error) => {\n                    return (\n                        <div class=\"alert alert-danger\" role=\"alert\">\n                            {error.msg}\n                      </div>\n                    )\n                }):null}\n                {emailerror ? \n                <div class=\"alert alert-danger\" role=\"alert\">\n                    {emailerror}\n                    </div>: null}\n            <label>New Password</label> \n            <input placeholder=\"Enter New Password\" className=\"form-control\" type=\"password\" value={password} onChange={(e) => setpassword(e.target.value.trim())} /><br/>\n\n            <label>Re-type Password</label>   \n            <input placeholder=\"Enter Password Again\" className=\"form-control\" type=\"password\" value={repassword} onChange={(e) => setrepassword(e.target.value.trim())} /><br/> \n\n            <div className=\"it19184722-btn-section\">\n            <input id=\"resetPassword\" type=\"button\" value=\"Reset\" onClick={resetPassword} className=\"it19184722-green-btn btn\" style={{marginRight:'5px'}}/>\n            <input id=\"cancelButton2\" type=\"button\" value=\"Cancel\" onClick={cancelReset} className=\"btn-danger it19184722-red-btn btn\" />\n            </div>\n            </form>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}