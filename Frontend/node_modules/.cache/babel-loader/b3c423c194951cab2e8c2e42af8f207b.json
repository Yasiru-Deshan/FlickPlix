{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction UserAPI(token) {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isArtist, setIsArtist] = useState(false);\n  const [favourite, setFavourite] = useState([]);\n  const [history, setHistory] = useState([]);\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/user/infor', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsArtist(true) : setIsArtist(false); //console.log(res)\n\n          setFavourite(res.data.favourite);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n\n  const addFavourite = async trailer => {\n    if (!isLogged) return alert(\"Please login before adding to favourites\");\n    const check = favourite.every(item => {\n      return item._id !== trailer._id;\n    });\n\n    if (check) {\n      setFavourite([...favourite, { ...trailer,\n        quantity: 1\n      }]);\n      await axios.patch('/user/addfavourite', {\n        favourite: [...favourite, { ...trailer,\n          quantity: 1\n        }]\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n    } else {\n      alert(\"This product has been added to favourite.\");\n    }\n  };\n\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isArtist: [isArtist, setIsArtist],\n    favourite: [favourite, setFavourite],\n    addFavourite: addFavourite,\n    history: [history, setHistory]\n  };\n}\n\n_s(UserAPI, \"vJSuOSK2Qitvkbq/3PGnVZAIPZ4=\");\n\n_c = UserAPI;\nexport default UserAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAPI\");","map":{"version":3,"sources":["C:/Users/Dilanka Nirmal/Downloads/Y3S1/SPM/Assignment/Origin_FlickPlix/New/FlickPlix/Frontend/src/api/UserAPI.js"],"names":["useState","useEffect","axios","UserAPI","token","isLogged","setIsLogged","isArtist","setIsArtist","favourite","setFavourite","history","setHistory","getUser","res","get","headers","Authorization","data","role","err","alert","response","msg","addFavourite","trailer","check","every","item","_id","quantity","patch"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAK;AAEf,QAAGG,KAAH,EAAS;AACT,YAAMS,OAAO,GAAG,YAAW;AAC1B,YAAI;AACA,gBAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,aAAV,EAAyB;AAC3CC,YAAAA,OAAO,EAAE;AAACC,cAAAA,aAAa,EAAEb;AAAhB;AADkC,WAAzB,CAAlB;AAIJE,UAAAA,WAAW,CAAC,IAAD,CAAX;AACDQ,UAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAkB,CAAlB,GAAsBX,WAAW,CAAC,IAAD,CAAjC,GAA0CA,WAAW,CAAC,KAAD,CAArD,CANK,CAOL;;AACDE,UAAAA,YAAY,CAACI,GAAG,CAACI,IAAJ,CAAST,SAAV,CAAZ;AAEG,SAVD,CAUE,OAAOW,GAAP,EAAY;AACjBC,UAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaJ,IAAb,CAAkBK,GAAnB,CAAL;AACI;AACJ,OAdE;;AAgBHV,MAAAA,OAAO;AAEN;AACD,GAtBY,EAsBX,CAACT,KAAD,CAtBW,CAAT;;AAwBJ,QAAMoB,YAAY,GAAG,MAAOC,OAAP,IAAmB;AACpC,QAAG,CAACpB,QAAJ,EAAc,OAAOgB,KAAK,CAAC,0CAAD,CAAZ;AAEd,UAAMK,KAAK,GAAGjB,SAAS,CAACkB,KAAV,CAAgBC,IAAI,IAAG;AACjC,aAAOA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAA5B;AACH,KAFa,CAAd;;AAIA,QAAGH,KAAH,EAAS;AACLhB,MAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAe,EAAC,GAAGgB,OAAJ;AAAaK,QAAAA,QAAQ,EAAE;AAAvB,OAAf,CAAD,CAAZ;AAED,YAAM5B,KAAK,CAAC6B,KAAN,CAAY,oBAAZ,EAAkC;AAACtB,QAAAA,SAAS,EAAE,CAAC,GAAGA,SAAJ,EAAe,EAAC,GAAGgB,OAAJ;AAAaK,UAAAA,QAAQ,EAAE;AAAvB,SAAf;AAAZ,OAAlC,EAA0F;AAC7Fd,QAAAA,OAAO,EAAE;AAACC,UAAAA,aAAa,EAAEb;AAAhB;AADoF,OAA1F,CAAN;AAGF,KAND,MAMK;AACDiB,MAAAA,KAAK,CAAC,2CAAD,CAAL;AACH;AACJ,GAhBD;;AAmBA,SAAO;AACHhB,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CADP;AAEHC,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CAFP;AAGHC,IAAAA,SAAS,EAAE,CAACA,SAAD,EAAYC,YAAZ,CAHR;AAIHc,IAAAA,YAAY,EAAEA,YAJX;AAKHb,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV;AALN,GAAP;AASC;;GA1DQT,O;;KAAAA,O;AA8DT,eAAeA,OAAf","sourcesContent":["import {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction UserAPI(token) {\r\n    const [isLogged, setIsLogged] = useState(false)\r\n    const [isArtist, setIsArtist] = useState(false)\r\n    const [favourite, setFavourite] = useState([])\r\n    const [history, setHistory] = useState([])\r\n\r\n    useEffect(() =>{\r\n\r\n    if(token){\r\n    const getUser = async () =>{\r\n     try {\r\n         const res = await axios.get('/user/infor', {\r\n         headers: {Authorization: token}\r\n  })\r\n\r\n     setIsLogged(true)\r\n    res.data.role === 1 ? setIsArtist(true) : setIsArtist(false)\r\n    //console.log(res)\r\n   setFavourite(res.data.favourite)\r\n\r\n     } catch (err) {\r\n  alert(err.response.data.msg)\r\n     }\r\n }\r\n\r\n getUser()\r\n            \r\n }\r\n},[token])\r\n\r\nconst addFavourite = async (trailer) => {\r\n    if(!isLogged) return alert(\"Please login before adding to favourites\")\r\n\r\n    const check = favourite.every(item =>{\r\n        return item._id !== trailer._id\r\n    })\r\n\r\n    if(check){\r\n        setFavourite([...favourite, {...trailer, quantity: 1}])\r\n\r\n       await axios.patch('/user/addfavourite', {favourite: [...favourite, {...trailer, quantity: 1}]}, {\r\n          headers: {Authorization: token}\r\n  })\r\n    }else{\r\n        alert(\"This product has been added to favourite.\")\r\n    }\r\n}\r\n\r\n\r\nreturn {\r\n    isLogged: [isLogged, setIsLogged],\r\n    isArtist: [isArtist, setIsArtist],\r\n    favourite: [favourite, setFavourite],\r\n    addFavourite: addFavourite,\r\n    history: [history, setHistory]\r\n}\r\n \r\n  \r\n}\r\n\r\n\r\n\r\nexport default UserAPI\r\n "]},"metadata":{},"sourceType":"module"}