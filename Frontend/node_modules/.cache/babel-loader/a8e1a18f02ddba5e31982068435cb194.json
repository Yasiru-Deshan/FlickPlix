{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yassa\\\\Desktop\\\\8-20 clone\\\\SPM FLICKPLIX\\\\FlickPlix\\\\frontend\\\\src\\\\components\\\\Playlist\\\\playlist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Carousel from \"react-elastic-carousel\";\nimport './playlist.css';\nimport Button from \"@material-ui/core/Button\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport Modal from 'react-modal';\nimport { Form } from 'react-bootstrap';\nimport '../../pages/favorites/favorites.css';\nimport PlayListItem from './playlistitem';\nimport { jsPDF } from 'jspdf'; //import ListIcon from '@material-ui/icons/List';\n//import MoreVertIcon from '@material-ui/icons/MoreVert';\n//import IconButton from \"@material-ui/core/IconButton\";\n//import MenuItem from \"@material-ui/core/MenuItem\";\n//import Menu from \"@material-ui/core/Menu\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst breakPoints = [{\n  width: 1,\n  itemsToShow: 1\n}, {\n  width: 550,\n  itemsToShow: 2\n}, {\n  width: 768,\n  itemsToShow: 3\n}, {\n  width: 1200,\n  itemsToShow: 5\n}];\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction Playlist(props) {\n  _s();\n\n  const classes = useStyles();\n  const pid = props.id;\n  const [mdal, setModal] = useState(false);\n  const [tname, settname] = useState(\"\");\n  const [pdesc, setpdesc] = useState(\"\");\n  const [favs, setFavs] = useState([]);\n  useEffect(() => {\n    const getFavs = () => {\n      axios.get('http://localhost:8070/api/favorites/allfavs').then(res => {\n        setFavs(res.data);\n      });\n    };\n\n    getFavs();\n  }, []);\n\n  const FavoritesAll = () => {\n    return favs.map(mName => {\n      return /*#__PURE__*/_jsxDEV(PlayListItem, {\n        id: mName.movieId,\n        title: mName.title,\n        img: mName.img,\n        year: mName.year,\n        type: mName.genre\n      }, mName.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this);\n    });\n  };\n\n  {\n    /*useEffect (() => {\r\n         async function fetchData(){\r\n             const response = (await axios.get(`http://localhost:8070/api/playlists/find/6145943d4126af16b430b3ef`)).data;\r\n             settname(response.tname);\r\n             setpdesc(response.pdesc);\r\n            \r\n         }\r\n         fetchData();\r\n     },[])*/\n  }\n\n  const submitHandler = async e => {\n    let update;\n    e.preventDefault();\n    const updatedPlaylist = {\n      userId: '611b74dd16f8353848675308',\n      name: tname,\n      desc: pdesc\n    };\n\n    try {\n      update = await axios.put(`http://localhost:8070/api/playlists/edit/${pid}`, updatedPlaylist);\n\n      if (update) {\n        window.alert(`${props.name} Play list has been updated`);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }; //morevert\n\n\n  {\n    /*const MyOptions = [\r\n     \"\",\r\n     \"Edit Playlist\",\r\n     \"Delete playlist\",\r\n     \"Save as PDF\",\r\n    ];\r\n     const handleClick = (event) => {\r\n     setAnchorEl(event.currentTarget);\r\n    };\r\n    \n    const open = Boolean(anchorEl);\r\n    \n    const handleClose = () => {\r\n     setAnchorEl(null);\r\n    };\r\n     */\n  }\n\n  const deletePlaylist = async id => {\n    let deletion;\n\n    if (window.confirm(`Are you sure about deleting playlist ${props.name}?`)) {\n      deletion = await axios.delete(`http://localhost:8070/api/playlists/delete/${id}`);\n    }\n\n    if (deletion) {\n      window.alert(`${props.name} Play list has been deleted`);\n    }\n  }; //generate report of movies in the playlist \n\n\n  const pdf = () => {\n    let bodyData = [];\n\n    for (let j = 0; favs.length > j; j++) {\n      bodyData.push([favs[j].title, favs[j].year, favs[j].type]);\n    } //save json data to bodydata in order to print in the pdf table\n\n\n    const doc = new jsPDF({\n      orientation: \"portrait\"\n    });\n    var time = new Date().toLocaleString();\n    doc.setFontSize(20);\n    doc.text(`My Playlist`, 105, 13, null, null, \"center\");\n    doc.setFontSize(10);\n    doc.text(`(Generated on ${time})`, 105, 17, null, null, \"center\");\n    doc.setFontSize(12);\n    doc.text(\"FlickPlix Â© 2021 All rights reserved.\", 105, 22, null, null, \"center\");\n    doc.autoTable({\n      theme: 'grid',\n      styles: {\n        halign: 'center'\n      },\n      headStyles: {\n        fillColor: [71, 201, 76]\n      },\n      startY: 27,\n      head: [['Movie Title', 'Year', 'Genre']],\n      body: bodyData\n    });\n    doc.save(`${props.name}-playlist.pdf`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: mdal,\n      onRequestClose: () => setModal(false),\n      style: {\n        overlay: {\n          backgroundColor: 'transparent',\n          marginTop: '100px',\n          width: '30%',\n          height: '445px',\n          marginLeft: '50%'\n        },\n        content: {\n          borderRadius: '20px',\n          color: 'white',\n          background: '#373B44'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: tname,\n          onChange: e => {\n            settname(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          onChange: e => {\n            setpdesc(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => setModal(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headingWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"pHeading\",\n            children: props.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 1\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"playDesc\",\n            children: props.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carousel\",\n        children: /*#__PURE__*/_jsxDEV(Carousel, {\n          breakPoints: breakPoints,\n          children: /*#__PURE__*/_jsxDEV(FavoritesAll, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 1\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uebtn\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: () => deletePlaylist(props.id),\n          className: classes.button,\n          startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 26\n          }, this),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.button,\n          onClick: () => setModal(true),\n          startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 26\n          }, this),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.button,\n          onClick: pdf,\n          endIcon: /*#__PURE__*/_jsxDEV(BookmarkIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 24\n          }, this),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Playlist, \"A/5lhPruUnfnyv88hmpd2LIlW5k=\", false, function () {\n  return [useStyles];\n});\n\n_c = Playlist;\nexport default Playlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"sources":["C:/Users/Yassa/Desktop/8-20 clone/SPM FLICKPLIX/FlickPlix/frontend/src/components/Playlist/playlist.js"],"names":["React","useEffect","useState","Carousel","Button","DeleteIcon","EditIcon","BookmarkIcon","makeStyles","axios","Modal","Form","PlayListItem","jsPDF","breakPoints","width","itemsToShow","useStyles","theme","button","margin","spacing","Playlist","props","classes","pid","id","mdal","setModal","tname","settname","pdesc","setpdesc","favs","setFavs","getFavs","get","then","res","data","FavoritesAll","map","mName","movieId","title","img","year","genre","submitHandler","e","update","preventDefault","updatedPlaylist","userId","name","desc","put","window","alert","err","console","log","deletePlaylist","deletion","confirm","delete","pdf","bodyData","j","length","push","type","doc","orientation","time","Date","toLocaleString","setFontSize","text","autoTable","styles","halign","headStyles","fillColor","startY","head","body","save","overlay","backgroundColor","marginTop","height","marginLeft","content","borderRadius","color","background","target","value"],"mappings":"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","sourcesContent":["import React,{ useEffect, useState} from 'react';\r\nimport Carousel from \"react-elastic-carousel\";\r\nimport './playlist.css';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\nimport Modal from 'react-modal';\r\nimport { Form } from 'react-bootstrap';\r\nimport '../../pages/favorites/favorites.css';\r\nimport PlayListItem from './playlistitem';\r\nimport {jsPDF} from 'jspdf';\r\n//import ListIcon from '@material-ui/icons/List';\r\n//import MoreVertIcon from '@material-ui/icons/MoreVert';\r\n//import IconButton from \"@material-ui/core/IconButton\";\r\n//import MenuItem from \"@material-ui/core/MenuItem\";\r\n//import Menu from \"@material-ui/core/Menu\";\r\n\r\n\r\n\r\nconst breakPoints = [\r\n    { width: 1, itemsToShow: 1 },\r\n    { width: 550, itemsToShow: 2 },\r\n    { width: 768, itemsToShow: 3 },\r\n    { width: 1200, itemsToShow: 5 },\r\n  ];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\nfunction Playlist(props) {\r\n    const classes = useStyles();\r\n    const pid = props.id;\r\n    const [mdal,setModal] = useState(false);\r\n    const [tname, settname] = useState(\"\");\r\n    const [pdesc, setpdesc] = useState(\"\");\r\n    const [favs,setFavs]  = useState([]);\r\n\r\n\r\n     useEffect(()=>{\r\n\r\n      const getFavs = () =>{\r\n        axios.get('http://localhost:8070/api/favorites/allfavs').then((res)=>{\r\n          setFavs(res.data);\r\n        })\r\n      }\r\n\r\n      getFavs();\r\n    },[])\r\n\r\n    const FavoritesAll = ()=>{\r\n      return favs.map((mName)=>{\r\n\r\n        return(\r\n          <PlayListItem\r\n               key = {mName.id}\r\n               id  =   {mName.movieId}\r\n              title = {mName.title}\r\n                img = {mName.img}\r\n                year={mName.year}\r\n                type={mName.genre}  \r\n                />\r\n        )\r\n      })\r\n    }\r\n    \r\n\r\n  {/*useEffect (() => {\r\n        async function fetchData(){\r\n            const response = (await axios.get(`http://localhost:8070/api/playlists/find/6145943d4126af16b430b3ef`)).data;\r\n            settname(response.tname);\r\n            setpdesc(response.pdesc);\r\n           \r\n        }\r\n        fetchData();\r\n    },[])*/}\r\n\r\n  const submitHandler  = async(e)=>{\r\n      let update;\r\n\r\n      e.preventDefault()\r\n      const updatedPlaylist = {\r\n        userId: '611b74dd16f8353848675308',\r\n        name: tname,\r\n        desc: pdesc,\r\n        \r\n      }\r\n\r\n      try{\r\n        update = await axios.put(`http://localhost:8070/api/playlists/edit/${pid}`,updatedPlaylist)\r\n\r\n         if (update){\r\n       window.alert(`${props.name} Play list has been updated`)\r\n  }\r\n      }catch(err){\r\n        console.log(err)\r\n      }\r\n    }\r\n\r\n  //morevert\r\n    {/*const MyOptions = [\r\n      \"\",\r\n      \"Edit Playlist\",\r\n      \"Delete playlist\",\r\n      \"Save as PDF\",\r\n    ];\r\n\r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n    \r\n    const open = Boolean(anchorEl);\r\n    \r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n  \r\n  */}\r\n\r\n  const deletePlaylist = async (id) => {\r\n    let deletion;\r\n    \r\n\r\n    if (window.confirm(`Are you sure about deleting playlist ${props.name}?`)) {\r\n      deletion = await axios.delete(`http://localhost:8070/api/playlists/delete/${id}`);\r\n    }\r\n  \r\n  if (deletion){\r\n       window.alert(`${props.name} Play list has been deleted`)\r\n  }\r\n  }\r\n  \r\n   //generate report of movies in the playlist \r\n    const pdf = () => {\r\n        \r\n  \r\n          let bodyData = [];\r\n          for(let j = 0;favs.length > j ; j++){\r\n              bodyData.push([ favs[j].title,favs[j].year,favs[j].type]);\r\n          }//save json data to bodydata in order to print in the pdf table\r\n  \r\n          const doc = new jsPDF({orientation:\"portrait\"});\r\n          var time = new Date().toLocaleString();\r\n          doc.setFontSize(20);\r\n          doc.text(`My Playlist`, 105, 13, null, null, \"center\");\r\n          doc.setFontSize(10);\r\n          doc.text(`(Generated on ${time})`, 105, 17, null, null, \"center\");\r\n          doc.setFontSize(12);\r\n          doc.text(\"FlickPlix Â© 2021 All rights reserved.\", 105, 22, null, null, \"center\");\r\n          \r\n          doc.autoTable({\r\n              theme : 'grid',\r\n              styles: {halign:'center'},\r\n              headStyles:{fillColor:[71, 201, 76]},\r\n              startY:27,\r\n              head: [['Movie Title','Year','Genre']],\r\n              body: bodyData\r\n          })\r\n          doc.save(`${props.name}-playlist.pdf`);\r\n      }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n           <Modal\r\n         isOpen={mdal} \r\n         onRequestClose={()=> setModal(false)}\r\n         style={{\r\n           overlay: {\r\n             backgroundColor: 'transparent',\r\n             marginTop: '100px',\r\n             width: '30%',\r\n             height: '445px',\r\n             marginLeft: '50%', \r\n           },\r\n\r\n           content: {\r\n             borderRadius: '20px',\r\n             color: 'white',\r\n             background: '#373B44'\r\n\r\n\r\n             \r\n           }\r\n         }}>\r\n          <h1>Edit Playlist</h1>\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control type=\"text\"\r\n                         value={tname}\r\n                        \r\n                          onChange={(e) => {settname(e.target.value);}} \r\n                         \r\n                          />\r\n\r\n            <Form.Label>Description</Form.Label>\r\n            <Form.Control type=\"text\" \r\n                  \r\n                          \r\n                        \r\n                          onChange={(e) => {setpdesc(e.target.value);}}\r\n                        \r\n                          />\r\n           <Button variant=\"primary\" onClick={()=>setModal(false)}>\r\n             Close\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n             Update\r\n            </Button>\r\n           \r\n          </Form>\r\n        </Modal>\r\n\r\n\r\n<div className='container'>\r\n         \r\n<div className=\"headingWrapper\">\r\n<div>\r\n<h1 className=\"pHeading\">{props.name}</h1>\r\n</div>\r\n\r\n     {/* <IconButton\r\n        aria-label=\"more\"\r\n        onClick={handleClick}\r\n        aria-haspopup=\"true\"\r\n        aria-controls=\"long-menu\"\r\n        className=\"pdbtn\"\r\n      >\r\n<div><MoreVertIcon/>\r\n</div>\r\n </IconButton>\r\n      <Menu \r\n        anchorEl={anchorEl} \r\n        keepMounted onClose={handleClose} \r\n        open={open}>\r\n        {MyOptions.map((option) => (\r\n          <MenuItem\r\n            key={option} \r\n            onClick={handleClose}>\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n*/}\r\n<div><p className=\"playDesc\">{props.desc}</p></div>\r\n</div>\r\n\r\n\r\n\r\n<div className=\"carousel\">\r\n<Carousel breakPoints={breakPoints}>\r\n<FavoritesAll/>\r\n\r\n\r\n</Carousel>\r\n</div>\r\n<div className=\"uebtn\">\r\n<Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={() => deletePlaylist(props.id)}\r\n              className={classes.button}\r\n              startIcon={<DeleteIcon />\r\n              }>Delete</Button>\r\n<Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick = {()=> setModal(true)}\r\n              startIcon={<EditIcon/>}>Edit</Button>\r\n\r\n<Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={pdf}\r\n              endIcon={<BookmarkIcon></BookmarkIcon>}\r\n            >\r\n              Save\r\n            </Button>\r\n</div>\r\n\r\n        \r\n        </div>\r\n        </div>\r\n    );\r\n      \r\n}\r\n\r\nexport default Playlist\r\n"]},"metadata":{},"sourceType":"module"}