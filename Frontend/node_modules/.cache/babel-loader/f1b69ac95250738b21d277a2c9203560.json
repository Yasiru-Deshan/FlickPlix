{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction UserAPI(token) {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [cart, setCart] = useState([]); //const [history, setHistory] = useState([])\n\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/user/infor', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsArtist(true) : setIsArtist(false);\n          console.log(res); // setCart(res.data.cart)\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n\n  const add = async product => {\n    if (!isLogged) return alert(\"Please login to continue buying\");\n    const check = cart.every(item => {\n      return item._id !== product._id;\n    });\n\n    if (check) {\n      setCart([...cart, { ...product,\n        quantity: 1\n      }]);\n      await axios.patch('/user/addcart', {\n        cart: [...cart, { ...product,\n          quantity: 1\n        }]\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n    } else {\n      alert(\"This product has been added to cart.\");\n    }\n  };\n\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    cart: [cart, setCart],\n    addCart: addCart // history: [history, setHistory]\n\n  };\n}\n\n_s(UserAPI, \"bRWEenHGuj23AV38AmLORPHuZ9g=\");\n\n_c = UserAPI;\nexport default UserAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAPI\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/New folder/FlickPlix/frontend/src/api/UserAPI.js"],"names":["useState","useEffect","axios","UserAPI","token","isLogged","setIsLogged","isAdmin","setIsAdmin","cart","setCart","getUser","res","get","headers","Authorization","data","role","setIsArtist","console","log","err","alert","response","msg","add","product","check","every","item","_id","quantity","patch","addCart"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC,CAHoB,CAIpB;;AAEAC,EAAAA,SAAS,CAAC,MAAK;AAEf,QAAGG,KAAH,EAAS;AACT,YAAMO,OAAO,GAAG,YAAW;AAC1B,YAAI;AACA,gBAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,aAAV,EAAyB;AAC3CC,YAAAA,OAAO,EAAE;AAACC,cAAAA,aAAa,EAAEX;AAAhB;AADkC,WAAzB,CAAlB;AAIJE,UAAAA,WAAW,CAAC,IAAD,CAAX;AACDM,UAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAkB,CAAlB,GAAsBC,WAAW,CAAC,IAAD,CAAjC,GAA0CA,WAAW,CAAC,KAAD,CAArD;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ,EAPK,CAQP;AAEI,SAVD,CAUE,OAAOS,GAAP,EAAY;AACjBC,UAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaP,IAAb,CAAkBQ,GAAnB,CAAL;AACI;AACJ,OAdE;;AAgBHb,MAAAA,OAAO;AAEN;AACD,GAtBY,EAsBX,CAACP,KAAD,CAtBW,CAAT;;AAwBJ,QAAMqB,GAAG,GAAG,MAAOC,OAAP,IAAmB;AAC3B,QAAG,CAACrB,QAAJ,EAAc,OAAOiB,KAAK,CAAC,iCAAD,CAAZ;AAEd,UAAMK,KAAK,GAAGlB,IAAI,CAACmB,KAAL,CAAWC,IAAI,IAAG;AAC5B,aAAOA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAA5B;AACH,KAFa,CAAd;;AAIA,QAAGH,KAAH,EAAS;AACLjB,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU,EAAC,GAAGiB,OAAJ;AAAaK,QAAAA,QAAQ,EAAE;AAAvB,OAAV,CAAD,CAAP;AAED,YAAM7B,KAAK,CAAC8B,KAAN,CAAY,eAAZ,EAA6B;AAACvB,QAAAA,IAAI,EAAE,CAAC,GAAGA,IAAJ,EAAU,EAAC,GAAGiB,OAAJ;AAAaK,UAAAA,QAAQ,EAAE;AAAvB,SAAV;AAAP,OAA7B,EAA2E;AAC9EjB,QAAAA,OAAO,EAAE;AAACC,UAAAA,aAAa,EAAEX;AAAhB;AADqE,OAA3E,CAAN;AAGF,KAND,MAMK;AACDkB,MAAAA,KAAK,CAAC,sCAAD,CAAL;AACH;AACJ,GAhBD;;AAmBA,SAAO;AACHjB,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CADP;AAEHC,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV,CAFN;AAGHC,IAAAA,IAAI,EAAE,CAACA,IAAD,EAAOC,OAAP,CAHH;AAIHuB,IAAAA,OAAO,EAAEA,OAJN,CAKJ;;AALI,GAAP;AASC;;GA1DQ9B,O;;KAAAA,O;AA8DT,eAAeA,OAAf","sourcesContent":["import {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction UserAPI(token) {\r\n    const [isLogged, setIsLogged] = useState(false)\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [cart, setCart] = useState([])\r\n    //const [history, setHistory] = useState([])\r\n\r\n    useEffect(() =>{\r\n\r\n    if(token){\r\n    const getUser = async () =>{\r\n     try {\r\n         const res = await axios.get('/user/infor', {\r\n         headers: {Authorization: token}\r\n  })\r\n\r\n     setIsLogged(true)\r\n    res.data.role === 1 ? setIsArtist(true) : setIsArtist(false)\r\n    console.log(res)\r\n  // setCart(res.data.cart)\r\n\r\n     } catch (err) {\r\n  alert(err.response.data.msg)\r\n     }\r\n }\r\n\r\n getUser()\r\n            \r\n }\r\n},[token])\r\n\r\nconst add = async (product) => {\r\n    if(!isLogged) return alert(\"Please login to continue buying\")\r\n\r\n    const check = cart.every(item =>{\r\n        return item._id !== product._id\r\n    })\r\n\r\n    if(check){\r\n        setCart([...cart, {...product, quantity: 1}])\r\n\r\n       await axios.patch('/user/addcart', {cart: [...cart, {...product, quantity: 1}]}, {\r\n          headers: {Authorization: token}\r\n  })\r\n    }else{\r\n        alert(\"This product has been added to cart.\")\r\n    }\r\n}\r\n\r\n\r\nreturn {\r\n    isLogged: [isLogged, setIsLogged],\r\n    isAdmin: [isAdmin, setIsAdmin],\r\n    cart: [cart, setCart],\r\n    addCart: addCart\r\n   // history: [history, setHistory]\r\n}\r\n \r\n  \r\n}\r\n\r\n\r\n\r\nexport default UserAPI\r\n "]},"metadata":{},"sourceType":"module"}