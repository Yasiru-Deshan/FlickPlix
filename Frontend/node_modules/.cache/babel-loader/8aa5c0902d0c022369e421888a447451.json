{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dilanka Nirmal\\\\Downloads\\\\Y3S1\\\\SPM\\\\Assignment\\\\Origin_FlickPlix\\\\FlickPlix\\\\Frontend\\\\src\\\\components\\\\publicRoute\\\\PublicRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getToken } from '../../utils/common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PublicRoute({\n  component: Component,\n  ...rest\n}) {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => !getToken() ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 44\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/customer/profile'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 71\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n_c = PublicRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicRoute\");","map":{"version":3,"sources":["C:/Users/Dilanka Nirmal/Downloads/Y3S1/SPM/Assignment/Origin_FlickPlix/FlickPlix/Frontend/src/components/publicRoute/PublicRoute.js"],"names":["React","Route","Redirect","getToken","PublicRoute","component","Component","rest","props","pathname"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAAQC,QAAR,QAAuB,oBAAvB;;AAEA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAArB,EAAwD;AACnE,sBACI,QAAC,KAAD,OACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IAAW,CAACL,QAAQ,EAAT,gBAAc,QAAC,SAAD,OAAeK;AAAf;AAAA;AAAA;AAAA;AAAA,YAAd,gBAAyC,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ;AAAd;AAAA;AAAA;AAAA;AAAA;AAF9D;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;KAPuBL,W","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport {getToken} from '../../utils/common'\n\nexport default function PublicRoute({ component: Component, ...rest }) {\n    return (\n        <Route\n          {...rest}\n          render={(props) => !getToken() ? <Component {...props} /> : <Redirect to={{ pathname: '/customer/profile' }} />}\n        />\n      )\n}\n"]},"metadata":{},"sourceType":"module"}