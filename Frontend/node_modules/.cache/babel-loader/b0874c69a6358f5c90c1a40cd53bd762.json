{"ast":null,"code":"import axios from \"axios\";\nimport { createMovieFailure, createMovieStart, createMovieSuccess, deleteMovieFailure, deleteMovieStart, deleteMovieSuccess, getMoviesFailure, getMoviesStart, getMoviesSuccess } from \"./MovieActions\";\nimport { getToken } from \"../../components/mainpages/utils/common\";\nexport const getMovies = async dispatch => {\n  dispatch(getMoviesStart());\n\n  try {\n    const res = await axios.get(\"http://localhost:8070/api/movies\", {\n      headers: {\n        Authorization: getToken()\n      }\n    });\n    dispatch(getMoviesSuccess(res.data));\n  } catch (err) {\n    dispatch(getMoviesFailure());\n  }\n}; //create\n\nexport const createMovie = async (movie, dispatch) => {\n  dispatch(createMovieStart());\n\n  try {\n    const res = await axios.post(\"http://localhost:8070/api/movies\", movie, {\n      headers: {\n        Authorization: getToken()\n      }\n    });\n    dispatch(createMovieSuccess(res.data));\n  } catch (err) {\n    dispatch(createMovieFailure());\n  }\n}; //delete\n\nexport const deleteMovie = async (id, dispatch) => {\n  dispatch(deleteMovieStart());\n\n  try {\n    await axios.delete(\"http://localhost:8070/api/movies/\" + id, {\n      headers: {\n        Authorization: getToken()\n      }\n    });\n    dispatch(deleteMovieSuccess(id));\n  } catch (err) {\n    dispatch(deleteMovieFailure());\n  }\n};","map":{"version":3,"sources":["C:/Users/Dilanka Nirmal/Downloads/Y3S1/SPM/Assignment/Origin_FlickPlix/FlickPlix/Frontend/src/context/movieContext/apiCalls.js"],"names":["axios","createMovieFailure","createMovieStart","createMovieSuccess","deleteMovieFailure","deleteMovieStart","deleteMovieSuccess","getMoviesFailure","getMoviesStart","getMoviesSuccess","getToken","getMovies","dispatch","res","get","headers","Authorization","data","err","createMovie","movie","post","deleteMovie","id","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,kBADF,EAEEC,gBAFF,EAGEC,kBAHF,EAIEC,kBAJF,EAKEC,gBALF,EAMEC,kBANF,EAOEC,gBAPF,EAQEC,cARF,EASEC,gBATF,QAUO,gBAVP;AAWA,SAASC,QAAT,QAAyB,yCAAzB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAOC,QAAP,IAAoB;AAC3CA,EAAAA,QAAQ,CAACJ,cAAc,EAAf,CAAR;;AACA,MAAI;AACF,UAAMK,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAU,kCAAV,EAA8C;AAC9DC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEN,QAAQ;AADhB;AADqD,KAA9C,CAAlB;AAKAE,IAAAA,QAAQ,CAACH,gBAAgB,CAACI,GAAG,CAACI,IAAL,CAAjB,CAAR;AACD,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZN,IAAAA,QAAQ,CAACL,gBAAgB,EAAjB,CAAR;AACD;AACF,CAZM,C,CAcP;;AACA,OAAO,MAAMY,WAAW,GAAG,OAAOC,KAAP,EAAcR,QAAd,KAA2B;AACpDA,EAAAA,QAAQ,CAACV,gBAAgB,EAAjB,CAAR;;AACA,MAAI;AACF,UAAMW,GAAG,GAAG,MAAMb,KAAK,CAACqB,IAAN,CAAW,kCAAX,EAA+CD,KAA/C,EAAsD;AACtEL,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEN,QAAQ;AADhB;AAD6D,KAAtD,CAAlB;AAKAE,IAAAA,QAAQ,CAACT,kBAAkB,CAACU,GAAG,CAACI,IAAL,CAAnB,CAAR;AACD,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZN,IAAAA,QAAQ,CAACX,kBAAkB,EAAnB,CAAR;AACD;AACF,CAZM,C,CAcP;;AACA,OAAO,MAAMqB,WAAW,GAAG,OAAOC,EAAP,EAAWX,QAAX,KAAwB;AACjDA,EAAAA,QAAQ,CAACP,gBAAgB,EAAjB,CAAR;;AACA,MAAI;AACF,UAAML,KAAK,CAACwB,MAAN,CAAa,sCAAsCD,EAAnD,EAAuD;AAC3DR,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEN,QAAQ;AADhB;AADkD,KAAvD,CAAN;AAKAE,IAAAA,QAAQ,CAACN,kBAAkB,CAACiB,EAAD,CAAnB,CAAR;AACD,GAPD,CAOE,OAAOL,GAAP,EAAY;AACZN,IAAAA,QAAQ,CAACR,kBAAkB,EAAnB,CAAR;AACD;AACF,CAZM","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  createMovieFailure,\r\n  createMovieStart,\r\n  createMovieSuccess,\r\n  deleteMovieFailure,\r\n  deleteMovieStart,\r\n  deleteMovieSuccess,\r\n  getMoviesFailure,\r\n  getMoviesStart,\r\n  getMoviesSuccess,\r\n} from \"./MovieActions\";\r\nimport { getToken } from \"../../components/mainpages/utils/common\";\r\n\r\nexport const getMovies = async (dispatch) => {\r\n  dispatch(getMoviesStart());\r\n  try {\r\n    const res = await axios.get(\"http://localhost:8070/api/movies\", {\r\n      headers: {\r\n        Authorization: getToken(),\r\n      },\r\n    });\r\n    dispatch(getMoviesSuccess(res.data));\r\n  } catch (err) {\r\n    dispatch(getMoviesFailure());\r\n  }\r\n};\r\n\r\n//create\r\nexport const createMovie = async (movie, dispatch) => {\r\n  dispatch(createMovieStart());\r\n  try {\r\n    const res = await axios.post(\"http://localhost:8070/api/movies\", movie, {\r\n      headers: {\r\n        Authorization: getToken(),\r\n      },\r\n    });\r\n    dispatch(createMovieSuccess(res.data));\r\n  } catch (err) {\r\n    dispatch(createMovieFailure());\r\n  }\r\n};\r\n\r\n//delete\r\nexport const deleteMovie = async (id, dispatch) => {\r\n  dispatch(deleteMovieStart());\r\n  try {\r\n    await axios.delete(\"http://localhost:8070/api/movies/\" + id, {\r\n      headers: {\r\n        Authorization: getToken(),\r\n      },\r\n    });\r\n    dispatch(deleteMovieSuccess(id));\r\n  } catch (err) {\r\n    dispatch(deleteMovieFailure());\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}