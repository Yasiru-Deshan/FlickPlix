{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\new\\\\FlickPlix\\\\frontend\\\\src\\\\components\\\\mainpages\\\\categories\\\\Categories.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { GlobalState } from '../../../GlobalState';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Categories() {\n  _s();\n\n  const state = useContext(GlobalState);\n  const [categories] = state.categoriesAPI.categories;\n  const [category, setCategory] = useState('');\n  const [token] = state.token;\n  const [callback, setCallback] = state.categoriesAPI.callback;\n  const [onEdit, setOnEdit] = useState(false);\n  const [id, setID] = useState('');\n\n  const createCategory = async e => {\n    e.preventDefault();\n\n    try {\n      if (onEdit) {\n        const res = await axios.put(`/api/category/${id}`, {\n          name: category\n        }, {\n          headers: {\n            Authorization: token\n          }\n        });\n        alert(res.data.msg);\n      } else {\n        const res = await axios.post('/api/category', {\n          name: category\n        }, {\n          headers: {\n            Authorization: token\n          }\n        });\n        alert(res.data.msg);\n      }\n\n      setOnEdit(false);\n      setCategory('');\n      setCallback(!callback);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const editCategory = async (id, name) => {\n    setID(id);\n    setCategory(name);\n    setOnEdit(true);\n  };\n\n  const deleteCategory = async id => {\n    try {\n      const res = await axios.delete(`/api/category/${id}`, {\n        headers: {\n          Authorization: token\n        }\n      });\n      alert(res.data.msg);\n      setCallback(!callback);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"categories\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: createCategory,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"category\",\n        children: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"cateogry\",\n        value: category,\n        required: true,\n        onChange: e => setCategory(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: onEdit ? \"Update\" : \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: categories.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: category.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => editCategory(category._id, category.name),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteCategory(category._id, category.name),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this)]\n      }, category._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Categories, \"hmFWyNyNp/qY9pFN73cFspfb50w=\");\n\n_c = Categories;\nexport default Categories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/new/FlickPlix/frontend/src/components/mainpages/categories/Categories.js"],"names":["React","useState","useContext","GlobalState","axios","Categories","state","categories","categoriesAPI","category","setCategory","token","callback","setCallback","onEdit","setOnEdit","id","setID","createCategory","e","preventDefault","res","put","name","headers","Authorization","alert","data","msg","post","err","response","editCategory","deleteCategory","delete","target","value","map","m","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,SAAQC,WAAR,QAA0B,sBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAClB,QAAMC,KAAK,GAAGJ,UAAU,CAACC,WAAD,CAAxB;AACA,QAAK,CAACI,UAAD,IAAeD,KAAK,CAACE,aAAN,CAAoBD,UAAxC;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAK,CAACU,KAAD,IAAUL,KAAK,CAACK,KAArB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAAyBP,KAAK,CAACE,aAAN,CAAoBI,QAAnD;AACA,QAAK,CAACE,MAAD,EAAQC,SAAR,IAAqBd,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACe,EAAD,EAAKC,KAAL,IAAchB,QAAQ,CAAC,EAAD,CAA5B;;AAEA,QAAMiB,cAAc,GAAG,MAAMC,CAAN,IAAU;AAC9BA,IAAAA,CAAC,CAACC,cAAF;;AAEH,QAAG;AACS,UAAGN,MAAH,EAAU;AACN,cAAMO,GAAG,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAW,iBAAgBN,EAAG,EAA9B,EAAiC;AAACO,UAAAA,IAAI,EAAEd;AAAP,SAAjC,EAAmD;AACjEe,UAAAA,OAAO,EAAE;AAACC,YAAAA,aAAa,EAAEd;AAAhB;AADwD,SAAnD,CAAlB;AAGAe,QAAAA,KAAK,CAACL,GAAG,CAACM,IAAJ,CAASC,GAAV,CAAL;AACH,OALD,MAKK;AACD,cAAMP,GAAG,GAAG,MAAMjB,KAAK,CAACyB,IAAN,CAAW,eAAX,EAA4B;AAACN,UAAAA,IAAI,EAAEd;AAAP,SAA5B,EAA8C;AAC5De,UAAAA,OAAO,EAAE;AAACC,YAAAA,aAAa,EAAEd;AAAhB;AADmD,SAA9C,CAAlB;AAGAe,QAAAA,KAAK,CAACL,GAAG,CAACM,IAAJ,CAASC,GAAV,CAAL;AACP;;AACGb,MAAAA,SAAS,CAAC,KAAD,CAAT;AACJL,MAAAA,WAAW,CAAC,EAAD,CAAX;AACIG,MAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AAGX,KAjBD,CAiBE,OAAOkB,GAAP,EAAW;AACLJ,MAAAA,KAAK,CAACI,GAAG,CAACC,QAAJ,CAAaJ,IAAb,CAAkBC,GAAnB,CAAL;AACH;AACJ,GAvBD;;AAwBF,QAAMI,YAAY,GAAG,OAAMhB,EAAN,EAAUO,IAAV,KAAkB;AACrCN,IAAAA,KAAK,CAACD,EAAD,CAAL;AACAN,IAAAA,WAAW,CAACa,IAAD,CAAX;AACAR,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAJD;;AAKA,QAAMkB,cAAc,GAAE,MAAMjB,EAAN,IAAW;AAC7B,QAAG;AACC,YAAMK,GAAG,GAAG,MAAMjB,KAAK,CAAC8B,MAAN,CAAc,iBAAgBlB,EAAG,EAAjC,EAAoC;AACpDQ,QAAAA,OAAO,EAAE;AAACC,UAAAA,aAAa,EAAEd;AAAhB;AAD2C,OAApC,CAAlB;AAGAe,MAAAA,KAAK,CAACL,GAAG,CAACM,IAAJ,CAASC,GAAV,CAAL;AACAf,MAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,KANH,CAMG,OAAMkB,GAAN,EAAU;AACPJ,MAAAA,KAAK,CAACI,GAAG,CAACC,QAAJ,CAAaJ,IAAb,CAAkBC,GAAnB,CAAL;AAEL;AACJ,GAXD;;AAYE,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAGV,cAAjB;AAAA,8BAEI;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,UAAxB;AAAmC,QAAA,KAAK,EAAGT,QAA3C;AAAqD,QAAA,QAAQ,MAA7D;AACA,QAAA,QAAQ,EAAGU,CAAC,IAAIT,WAAW,CAACS,CAAC,CAACgB,MAAF,CAASC,KAAV;AAD3B;AAAA;AAAA;AAAA;AAAA,cAHJ,eAMI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA,kBAAuBtB,MAAM,GAAE,QAAF,GAAY;AAAzC;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI;AAAK,MAAA,SAAS,EAAE,KAAhB;AAAA,gBAEQP,UAAU,CAAC8B,GAAX,CAAeC,CAAC,iBACZ;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACI;AAAA,oBAAI7B,QAAQ,CAACc;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,kCACI;AAAQ,YAAA,OAAO,EAAE,MAAMS,YAAY,CAACvB,QAAQ,CAAC8B,GAAV,EAAe9B,QAAQ,CAACc,IAAxB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,OAAO,EAAE,MAAMU,cAAc,CAACxB,QAAQ,CAAC8B,GAAV,EAAe9B,QAAQ,CAACc,IAAxB,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAA0Bd,QAAQ,CAAC8B,GAAnC;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;GA5EQlC,U;;KAAAA,U;AA8ET,eAAeA,UAAf","sourcesContent":["import React, {useState, useContext} from 'react'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport axios from 'axios'\r\n\r\nfunction Categories() {\r\n    const state = useContext(GlobalState)\r\n    const[categories] = state.categoriesAPI.categories\r\n    const [category, setCategory] = useState('')\r\n    const[token] = state.token\r\n    const [callback, setCallback] =state.categoriesAPI.callback\r\n    const[onEdit,setOnEdit] = useState(false)\r\n    const [id, setID] = useState('')\r\n\r\n    const createCategory = async e =>{\r\n       e.preventDefault()\r\n\r\n    try{\r\n                if(onEdit){\r\n                    const res = await axios.put(`/api/category/${id}`, {name: category}, {\r\n                        headers: {Authorization: token}\r\n                    })\r\n                    alert(res.data.msg)\r\n                }else{\r\n                    const res = await axios.post('/api/category', {name: category}, {\r\n                        headers: {Authorization: token}\r\n                    })\r\n                    alert(res.data.msg)\r\n            }\r\n                setOnEdit(false)\r\n            setCategory('')\r\n                setCallback(!callback)\r\n               \r\n\r\n    } catch (err){\r\n            alert(err.response.data.msg)\r\n        }\r\n    }\r\n  const editCategory = async(id, name) =>{\r\n    setID(id)\r\n    setCategory(name)\r\n    setOnEdit(true)\r\n  }\r\n  const deleteCategory =async id =>{\r\n      try{\r\n          const res = await axios.delete(`/api/category/${id}`, {\r\n            headers: {Authorization: token}\r\n          })\r\n          alert(res.data.msg)\r\n          setCallback(!callback)\r\n        }catch(err){\r\n            alert(err.response.data.msg)\r\n        \r\n      }\r\n  }\r\n    return (\r\n        <div className=\"categories\">\r\n            <form onSubmit ={createCategory}>\r\n\r\n                <label htmlFor=\"category\">Category</label>\r\n                <input type=\"text\" name=\"cateogry\" value= {category} required \r\n                onChange ={e => setCategory(e.target.value)} />\r\n                \r\n                <button type=\"submit\">{onEdit? \"Update\": \"Create\"}</button>\r\n\r\n            </form>\r\n            <div className =\"col\">\r\n                {\r\n                    categories.map(m =>(\r\n                        <div className=\"row\" key={category._id}>\r\n                            <p>{category.name}</p>\r\n                            <div>\r\n                                <button onClick={() => editCategory(category._id, category.name)}>Edit</button>\r\n                                <button onClick={() => deleteCategory(category._id, category.name)}>Delete</button>      \r\n             </div>\r\n        </div>\r\n         ))\r\n       }\r\n       </div>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Categories\r\n"]},"metadata":{},"sourceType":"module"}